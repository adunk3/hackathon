{"ast":null,"code":"import _objectSpread from \"/Users/alexduncan/react-chatbot/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/alexduncan/react-chatbot/src/components/CardStack.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst equalsZero = num => num === 0;\n\nconst errorMessage = 'CardStack component must have at least two child Card components. Please check the children of this CardStack instance.';\n\nclass CardStack extends React.Component {\n  constructor(props) {\n    super(props);\n    const children = props.children,\n          height = props.height,\n          initialCard = props.initialCard;\n    const childrenLength = children.length || 1;\n    const headerHeight = height / 10;\n    if (childrenLength <= 1) throw new Error(errorMessage);\n    this.initialTopOffsets = props.children.map((child, i) => equalsZero(i) ? 0 : headerHeight * i);\n    this.state = {\n      topOffsets: this.initialTopOffsets,\n      cardSelected: false\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.initialCard >= this.props.children.length) console.warn('prop \"initialCard\" cannot be equal or greater than children.length');else if (this.props.initialCard >= 0) this.handleCardClick(this.props.initialCard);\n  }\n\n  handleCardClick(id, cb) {\n    const initialState = {\n      topOffsets: [],\n      cardSelected: true\n    };\n    const cardSelected = this.state.cardSelected;\n\n    const nextState = (prev, offset, index) => {\n      const newOffset = index === id ? 0 : this.props.height;\n      return {\n        cardSelected: !cardSelected,\n        topOffsets: [...prev.topOffsets, cardSelected ? this.initialTopOffsets[index] : newOffset]\n      };\n    };\n\n    this.setState(this.state.topOffsets.reduce(nextState, initialState));\n    if (cb) cb(this.state.cardSelected, id);\n  }\n\n  renderCards() {\n    const cloneCard = (child, i) => React.cloneElement(child, {\n      key: i,\n      cardId: i,\n      hoverOffset: this.props.hoverOffset,\n      cardSelected: this.state.cardSelected,\n      height: this.props.height,\n      topOffset: this.state.topOffsets[i],\n      onClick: this.handleCardClick.bind(this)\n    });\n\n    return this.props.children.map(cloneCard);\n  }\n\n  render() {\n    const stackStyles = _objectSpread({}, styles, {\n      background: this.props.background,\n      height: this.props.height,\n      width: this.props.width\n    });\n\n    return React.createElement(\"ul\", {\n      style: stackStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.renderCards());\n  }\n\n}\n\nconst styles = {\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  overflow: 'hidden',\n  padding: 0,\n  margin: 0\n};\nCardStack.propTypes = {\n  background: PropTypes.string,\n  height: PropTypes.number,\n  hoverOffset: PropTypes.number,\n  width: PropTypes.number,\n  initialCard: PropTypes.number\n};\nCardStack.defaultProps = {\n  width: 350,\n  height: 600,\n  bgColor: 'f8f8f8',\n  hoverOffset: 30,\n  initialCard: -1\n};\nexport default CardStack;","map":{"version":3,"sources":["/Users/alexduncan/react-chatbot/src/components/CardStack.js"],"names":["React","PropTypes","equalsZero","num","errorMessage","CardStack","Component","constructor","props","children","height","initialCard","childrenLength","length","headerHeight","Error","initialTopOffsets","map","child","i","state","topOffsets","cardSelected","componentWillMount","console","warn","handleCardClick","id","cb","initialState","nextState","prev","offset","index","newOffset","setState","reduce","renderCards","cloneCard","cloneElement","key","cardId","hoverOffset","topOffset","onClick","bind","render","stackStyles","styles","background","width","display","flexDirection","position","overflow","padding","margin","propTypes","string","number","defaultProps","bgColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAU,GAAIC,GAAD,IAASA,GAAG,KAAK,CAApC;;AACA,MAAMC,YAAY,GAAG,yHAArB;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AACnB,UAAMA,KAAN;AADmB,UAEXC,QAFW,GAEuBD,KAFvB,CAEXC,QAFW;AAAA,UAEDC,MAFC,GAEuBF,KAFvB,CAEDE,MAFC;AAAA,UAEOC,WAFP,GAEuBH,KAFvB,CAEOG,WAFP;AAGnB,UAAMC,cAAc,GAAGH,QAAQ,CAACI,MAAT,IAAmB,CAA1C;AACA,UAAMC,YAAY,GAAGJ,MAAM,GAAG,EAA9B;AAEA,QAAIE,cAAc,IAAI,CAAtB,EAAyB,MAAM,IAAIG,KAAJ,CAAUX,YAAV,CAAN;AAEzB,SAAKY,iBAAL,GAAyBR,KAAK,CAACC,QAAN,CACvBQ,GADuB,CACnB,CAACC,KAAD,EAAQC,CAAR,KAAcjB,UAAU,CAACiB,CAAD,CAAV,GAAgB,CAAhB,GAAoBL,YAAY,GAAGK,CAD9B,CAAzB;AAGA,SAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,KAAKL,iBADL;AAEZM,MAAAA,YAAY,EAAE;AAFF,KAAb;AAIA;;AAEDC,EAAAA,kBAAkB,GAAI;AACrB,QAAI,KAAKf,KAAL,CAAWG,WAAX,IAA0B,KAAKH,KAAL,CAAWC,QAAX,CAAoBI,MAAlD,EACCW,OAAO,CAACC,IAAR,CAAa,oEAAb,EADD,KAEK,IAAI,KAAKjB,KAAL,CAAWG,WAAX,IAA0B,CAA9B,EACJ,KAAKe,eAAL,CAAqB,KAAKlB,KAAL,CAAWG,WAAhC;AACD;;AAEDe,EAAAA,eAAe,CAAEC,EAAF,EAAMC,EAAN,EAAU;AACxB,UAAMC,YAAY,GAAG;AACpBR,MAAAA,UAAU,EAAE,EADQ;AAEpBC,MAAAA,YAAY,EAAE;AAFM,KAArB;AADwB,UAKjBA,YALiB,GAKD,KAAKF,KALJ,CAKjBE,YALiB;;AAOxB,UAAMQ,SAAS,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,KAAyB;AAC1C,YAAMC,SAAS,GAAID,KAAK,KAAKN,EAAX,GAAiB,CAAjB,GAAqB,KAAKnB,KAAL,CAAWE,MAAlD;AACA,aAAO;AACNY,QAAAA,YAAY,EAAE,CAACA,YADT;AAEND,QAAAA,UAAU,EAAE,CACX,GAAGU,IAAI,CAACV,UADG,EAEXC,YAAY,GAAG,KAAKN,iBAAL,CAAuBiB,KAAvB,CAAH,GAAmCC,SAFpC;AAFN,OAAP;AAOA,KATD;;AAWA,SAAKC,QAAL,CAAc,KAAKf,KAAL,CAAWC,UAAX,CAAsBe,MAAtB,CAA6BN,SAA7B,EAAwCD,YAAxC,CAAd;AAEA,QAAID,EAAJ,EAAQA,EAAE,CAAC,KAAKR,KAAL,CAAWE,YAAZ,EAA0BK,EAA1B,CAAF;AACR;;AAEDU,EAAAA,WAAW,GAAI;AACd,UAAMC,SAAS,GAAG,CAACpB,KAAD,EAAQC,CAAR,KACjBnB,KAAK,CAACuC,YAAN,CAAmBrB,KAAnB,EAA0B;AACzBsB,MAAAA,GAAG,EAAErB,CADoB;AAEzBsB,MAAAA,MAAM,EAAEtB,CAFiB;AAGzBuB,MAAAA,WAAW,EAAE,KAAKlC,KAAL,CAAWkC,WAHC;AAIzBpB,MAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWE,YAJA;AAKzBZ,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MALM;AAMzBiC,MAAAA,SAAS,EAAE,KAAKvB,KAAL,CAAWC,UAAX,CAAsBF,CAAtB,CANc;AAOzByB,MAAAA,OAAO,EAAE,KAAKlB,eAAL,CAAqBmB,IAArB,CAA0B,IAA1B;AAPgB,KAA1B,CADD;;AAWA,WAAO,KAAKrC,KAAL,CAAWC,QAAX,CAAoBQ,GAApB,CAAwBqB,SAAxB,CAAP;AACA;;AAEDQ,EAAAA,MAAM,GAAI;AACT,UAAMC,WAAW,qBACbC,MADa;AAEhBC,MAAAA,UAAU,EAAE,KAAKzC,KAAL,CAAWyC,UAFP;AAGhBvC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAHH;AAIhBwC,MAAAA,KAAK,EAAE,KAAK1C,KAAL,CAAW0C;AAJF,MAAjB;;AAMA,WACC;AAAI,MAAA,KAAK,EAAEH,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKV,WAAL,EADF,CADD;AAKA;;AA3EsC;;AA8ExC,MAAMW,MAAM,GAAG;AACdG,EAAAA,OAAO,EAAE,MADK;AAEdC,EAAAA,aAAa,EAAE,QAFD;AAGdC,EAAAA,QAAQ,EAAE,UAHI;AAIdC,EAAAA,QAAQ,EAAE,QAJI;AAKdC,EAAAA,OAAO,EAAE,CALK;AAMdC,EAAAA,MAAM,EAAE;AANM,CAAf;AASAnD,SAAS,CAACoD,SAAV,GAAsB;AACrBR,EAAAA,UAAU,EAAEhD,SAAS,CAACyD,MADD;AAErBhD,EAAAA,MAAM,EAAET,SAAS,CAAC0D,MAFG;AAGrBjB,EAAAA,WAAW,EAAEzC,SAAS,CAAC0D,MAHF;AAIrBT,EAAAA,KAAK,EAAEjD,SAAS,CAAC0D,MAJI;AAKrBhD,EAAAA,WAAW,EAAEV,SAAS,CAAC0D;AALF,CAAtB;AAQAtD,SAAS,CAACuD,YAAV,GAAyB;AACxBV,EAAAA,KAAK,EAAE,GADiB;AAExBxC,EAAAA,MAAM,EAAE,GAFgB;AAGxBmD,EAAAA,OAAO,EAAE,QAHe;AAIxBnB,EAAAA,WAAW,EAAE,EAJW;AAKxB/B,EAAAA,WAAW,EAAE,CAAC;AALU,CAAzB;AAQA,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst equalsZero = (num) => num === 0;\nconst errorMessage = 'CardStack component must have at least two child Card components. Please check the children of this CardStack instance.';\n\nclass CardStack extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tconst { children, height, initialCard } = props;\n\t\tconst childrenLength = children.length || 1;\n\t\tconst headerHeight = height / 10;\n\n\t\tif (childrenLength <= 1) throw new Error(errorMessage);\n\n\t\tthis.initialTopOffsets = props.children\n\t\t\t.map((child, i) => equalsZero(i) ? 0 : headerHeight * i);\n\n\t\tthis.state = {\n\t\t\ttopOffsets: this.initialTopOffsets,\n\t\t\tcardSelected: false,\n\t\t};\n\t}\n\n\tcomponentWillMount () {\n\t\tif (this.props.initialCard >= this.props.children.length)\n\t\t\tconsole.warn('prop \"initialCard\" cannot be equal or greater than children.length');\n\t\telse if (this.props.initialCard >= 0)\n\t\t\tthis.handleCardClick(this.props.initialCard);\n\t}\n\n\thandleCardClick (id, cb) {\n\t\tconst initialState = {\n\t\t\ttopOffsets: [],\n\t\t\tcardSelected: true,\n\t\t};\n\t\tconst {cardSelected} = this.state;\n\n\t\tconst nextState = (prev, offset, index) => {\n\t\t\tconst newOffset = (index === id) ? 0 : this.props.height;\n\t\t\treturn {\n\t\t\t\tcardSelected: !cardSelected,\n\t\t\t\ttopOffsets: [\n\t\t\t\t\t...prev.topOffsets,\n\t\t\t\t\tcardSelected ? this.initialTopOffsets[index] : newOffset,\n\t\t\t\t],\n\t\t\t};\n\t\t};\n\n\t\tthis.setState(this.state.topOffsets.reduce(nextState, initialState));\n\n\t\tif (cb) cb(this.state.cardSelected, id);\n\t}\n\n\trenderCards () {\n\t\tconst cloneCard = (child, i) =>\n\t\t\tReact.cloneElement(child, {\n\t\t\t\tkey: i,\n\t\t\t\tcardId: i,\n\t\t\t\thoverOffset: this.props.hoverOffset,\n\t\t\t\tcardSelected: this.state.cardSelected,\n\t\t\t\theight: this.props.height,\n\t\t\t\ttopOffset: this.state.topOffsets[i],\n\t\t\t\tonClick: this.handleCardClick.bind(this),\n\t\t\t});\n\n\t\treturn this.props.children.map(cloneCard);\n\t}\n\n\trender () {\n\t\tconst stackStyles = {\n\t\t\t...styles,\n\t\t\tbackground: this.props.background,\n\t\t\theight: this.props.height,\n\t\t\twidth: this.props.width,\n\t\t};\n\t\treturn (\n\t\t\t<ul style={stackStyles}>\n\t\t\t\t{this.renderCards()}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nconst styles = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tposition: 'relative',\n\toverflow: 'hidden',\n\tpadding: 0,\n\tmargin: 0,\n};\n\nCardStack.propTypes = {\n\tbackground: PropTypes.string,\n\theight: PropTypes.number,\n\thoverOffset: PropTypes.number,\n\twidth: PropTypes.number,\n\tinitialCard: PropTypes.number,\n};\n\nCardStack.defaultProps = {\n\twidth: 350,\n\theight: 600,\n\tbgColor: 'f8f8f8',\n\thoverOffset: 30,\n\tinitialCard: -1,\n};\n\nexport default CardStack;\n"]},"metadata":{},"sourceType":"module"}